let R_LEP_x = [
  //rule1
  [0, 2, 0, 2, "A", "A", "A", 2, 1],
  //rule4
  [0, 2, 1, "A", "A", "A", "A", "A", 1],
  //rule6
  [0, 2, 0, 1, 0, "A", "A", "A", 1],
  [0, 2, 0, "A", "A", "A", 0, 1, 1],
  //rule2
  [1, 1, 1, "A", 0, 0, 1.5, 1.5, 1],
  [1, 1, 1, 1.5, 1.5, 0, 0, "A", 1],
  //rule3
  [1, 1, 1, "A", 0, 0, 0, "A", 1],
  //rule5
  [1, 1, 1, 1.5, 1.5, 0, 1.5, 1.5, 1],
  //rule5
  [1, 2, 1, "A", "A", "A", "A", "A", 1],
];

let R_makeLine_xy = [
  [0, 2, 0.5, 0, 0, "A", "A", 1.5, 1],
  [0, 2, "A", 0, 0, "A", 1.5, 0, 6],
  [0, 2, 1, 0, 0, "A", 0, 0, 6],
  [1, 2, 1, 0, 0, 1.5, "A", "A", 1],
  [1, 1, 1, 0, 0, 0, "A", 1.5, 1],
  [6, 2, "A", 0, 0, 1.5, 1.5, 1, 6],
  [6, 1, "A", 0, 0, 0, "A", 1, 6],
];

let testLightRule = [
  //連続する3つのオブジェクトに囲まれてたらライト1
  [[0, 0], [2, 0, 0], ["o"], ["!o"], ["o"], ["o"], ["o"], ["o"], [0, 1]],
  [[0, 0], [2, 0, 0], ["!o"], ["!o"], ["o"], ["o"], ["o"], ["o"], [0, 1]],
  [[0, 0], [2, 0, 0], ["!o"], ["!o"], ["o"], ["o"], ["o"], ["!o"], [0, 1]],

  [[0, 2], [2, 2, 2], ["o"], ["!o"], ["o"], ["o"], ["o"], ["o"], [0, 1]],
  [[0, 2], [2, 2, 2], ["!o"], ["!o"], ["o"], ["o"], ["o"], ["o"], [0, 1]],
  [[0, 2], [2, 2, 2], ["!o"], ["!o"], ["o"], ["o"], ["o"], ["!o"], [0, 1]],

  [[0, 3], [2, 3, 3], ["o"], ["!o"], ["o"], ["o"], ["o"], ["o"], [0, 1]],
  [[0, 3], [2, 3, 3], ["!o"], ["!o"], ["o"], ["o"], ["o"], ["o"], [0, 1]],
  [[0, 3], [2, 3, 3], ["!o"], ["!o"], ["o"], ["o"], ["o"], ["!o"], [0, 1]],

  //l am leader(short ver)
  [[0, 0], [2, 0, 0], [2, 0, 0], ["!r"], ["!r"], ["!r"], [0], ["o"], [0, 3]],
  [[0, 0], [2, 0, 0], [2, 0, 0], ["!r"], ["!r"], [0], ["o"], ["!r"], [0, 3]],

  [[0, 0], [2, 0, 0], [2, 0, 0], ["o"], [0], ["o"], ["o"], ["o"], [0, 3]],
  [[0, 0], [2, 0, 0], [2, 0, 0], ["!r"], [0], ["o"], ["o"], [0], [0, 3]],
  [[0, 0], [2, 0, 0], [2, 0, 0], ["!r"], [0], ["o"], [0], [0], [0, 3]],

  [[0, 0], [2, 0, 0], [2, 0, 0], [0], ["o"], ["!r"], ["!o"], ["!o"], [0, 3]],
  //l am leader(long ver)
  [[4, 0], [1, 0], ["o"], [0], [0], [1, 0], [0], [0], [0, 3]],

  [[4, 0], [1, 0], [0], ["o"], ["o"], [1, 0], [0], [0], [0, 3]],
  [[4, 0], [1, 0], ["o"], ["o"], [0], [1, 0], [0], [0], [0, 3]],
  [[4, 0], [1, 0], ["o"], [0], [0], [1, 0], [0], ["o"], [0, 3]],
  [[4, 0], [1, 0], [0], [0], [0], [1, 0], ["o"], ["o"], [0, 3]],

  [[4, 0], [1, 0], ["o"], ["o"], ["o"], [1, 0], [0], [0], [0, 3]],
  [[4, 0], [1, 0], ["o"], ["o"], [0], [1, 0], [0], ["o"], [0, 3]],
  [[4, 0], [1, 0], ["o"], [0], [0], [1, 0], ["o"], ["o"], [0, 3]],

  [[4, 0], [1, 0], [0], ["o"], ["o"], [1, 0], ["o"], [0], [0, 3]],
  [[4, 0], [1, 0], [0], ["o"], ["o"], [1, 0], [0], ["o"], [0, 3]],

  [[4, 0], [1, 0], ["o"], ["o"], ["o"], [1, 0], [0], ["o"], [0, 3]],
  [[4, 0], [1, 0], ["o"], ["o"], [0], [1, 0], ["o"], ["o"], [0, 3]],

  [[4, 0], [1, 0], [0], ["o"], ["o"], [1, 0], ["o"], ["o"], [0, 3]],
  [[4, 0], [1, 0], ["o"], ["o"], ["o"], [1, 0], ["o"], [0], [0, 3]],

  [[4, 0], [1, 0], ["o"], ["o"], ["o"], [1, 0], ["o"], ["o"], [0, 3]],

  // Leader short 左回り
  [[0, 3], [2, 3, 3], [2, 0, 0], ["!r"], ["!r"], ["!r"], [0], ["o"], [5, 3]],
  [[0, 3], [2, 3, 3], [2, 0, 0], ["!r"], ["!r"], [0], ["o"], ["!r"], [4, 3]],

  [[0, 3], [2, 3, 3], [2, 0, 0], ["o"], [0], ["o"], ["o"], ["o"], [3, 3]],
  [[0, 3], [2, 3, 3], [2, 0, 0], ["!r"], [0], ["o"], ["o"], [0], [3, 3]],
  [[0, 3], [2, 3, 3], [2, 0, 0], ["!r"], [0], ["o"], [0], [0], [3, 3]],

  [[0, 3], [2, 3, 3], [2, 0, 0], [0], ["o"], ["!r"], ["!o"], ["!o"], [2, 3]],

  //leader long
  // [[5, 2], [2, 2, 0], [1, 0], ["!r"], ["!r"], ["!r"], [1, 2], ["o"], [5, 2]],
  // [[4, 2], [2, 2, 0], [1, 0], ["!r"], ["!r"], [1, 2], ["o"], ["!r"], [4, 2]],
  // [[3, 2], [2, 2, 0], [1, 0], ["!r"], [1, 2], ["o"], ["!r"], ["!o"], [3, 2]],
  [[6, 3], [1, 3], ["o"], [0], [0], [0], [2, 0, 0], [1, 3], [6, 3]],
  [[6, 3], [1, 3], ["o"], ["o"], [0], [0], [2, 0, 0], [1, 3], [6, 3]],

  //nomal short
  [[0, 0], [2, 0, 0], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], [5, 0]],
  [[0, 0], [2, 0, 0], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r"], [1, 3], ["!r"], [5, 0]],

  [[0, 0], [2, 0, 0], [2, 0, 0], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], [4, 0]],
  [[0, 0], [2, 0, 0], [2, 0, 0], ["!r-3"], ["!r"], [1, 3], ["!r"], ["!r-3"], [4, 0]],

  [[0, 0], [2, 0, 0], [2, 0, 0], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], ["!r-3"], [3, 0]],
  [[0, 0], [2, 0, 0], [2, 0, 0], ["!r"], [1, 3], ["!r"], ["!r-3"], ["!r-3"], [3, 0]],

  //最後尾用
  [[0, 0], [2, 0, 0], [1, 0], [0], [0], [0], [0], [0], [1, 0]],
  [[0, 0], [2, 0, 0], [1, 2], [0], [0], [0], [0], [0], [1, 0]],
  [[1, 0], [1, 0], [1, 0], [0], [0], [0], [0], [0], [1, 0]],

  //2 longの時に誰か乗っかってきたらshortになる
  [[5, 2], [2, 2, 0], [1, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], [5, 2]],
  [[5, 2], [2, 2, 0], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], [5, 2]],

  [[5, 3], [2, 3, 0], [1, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 3], ["!r-3"], [5, 3]],
  [[5, 3], [2, 3, 0], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 3], ["!r-3"], [5, 3]],

  [[4, 2], [2, 2, 0], [1, 0], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], [4, 2]],
  [[4, 2], [2, 2, 0], [2, 0, 0], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], [4, 2]],

  [[4, 3], [2, 3, 0], [1, 0], ["!r-3"], ["!r-3"], [1, 3], ["!r-3"], ["!r-3"], [4, 3]],
  [[4, 3], [2, 3, 0], [2, 0, 0], ["!r-3"], ["!r-3"], [1, 3], ["!r-3"], ["!r-3"], [4, 3]],

  [[3, 2], [2, 2, 0], [1, 0], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], ["!r-3"], [3, 2]],
  [[3, 2], [2, 2, 0], [2, 0, 0], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], ["!r-3"], [3, 2]],

  [[3, 3], [2, 3, 0], [1, 0], ["!r-3"], [1, 3], ["!r-3"], ["!r-3"], ["!r-3"], [3, 3]],
  [[3, 3], [2, 3, 0], [2, 0, 0], ["!r-3"], [1, 3], ["!r-3"], ["!r-3"], ["!r-3"], [3, 3]],

  //nomal long light 0 -> 2
  [[5, 0], [1, 0], [2, 2, 2], ["!r-3"], ["!r-3"], ["!r-3"], [1, 0], ["!r-3"], [0, 2]],
  [[5, 0], [1, 0], [2, 2, 2], ["!r-3"], ["!r-3"], ["!r-3"], [2, 0, 0], ["!r-3"], [0, 2]],
  [[4, 0], [1, 0], [2, 2, 2], ["!r-3"], ["!r-3"], [1, 0], ["!r-3"], ["!r-3"], [0, 2]],
  [[4, 0], [1, 0], [2, 2, 2], ["!r-3"], ["!r-3"], [2, 0, 0], ["!r-3"], ["!r-3"], [0, 2]],
  [[3, 0], [1, 0], [2, 2, 2], ["!r-3"], [1, 0], ["!r-3"], ["!r-3"], ["!r-3"], [0, 2]],
  [[3, 0], [1, 0], [2, 2, 2], ["!r-3"], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [0, 2]],
  //light 3用
  [[5, 0], [1, 0], [2, 3, 3], ["!r-3"], ["!r-3"], ["!r-3"], [1, 0], ["!r-3"], [0, 2]],
  [[5, 0], [1, 0], [2, 3, 3], ["!r-3"], ["!r-3"], ["!r-3"], [2, 0, 0], ["!r-3"], [0, 2]],
  [[4, 0], [1, 0], [2, 3, 3], ["!r-3"], ["!r-3"], [1, 0], ["!r-3"], ["!r-3"], [0, 2]],
  [[4, 0], [1, 0], [2, 3, 3], ["!r-3"], ["!r-3"], [2, 0, 0], ["!r-3"], ["!r-3"], [0, 2]],
  [[3, 0], [1, 0], [2, 3, 3], ["!r-3"], [1, 0], ["!r-3"], ["!r-3"], ["!r-3"], [0, 2]],
  [[3, 0], [1, 0], [2, 3, 3], ["!r-3"], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [0, 2]],

  //2つ以上のshortを観測するとlight -> 0
  [[0, 2], ["2"], ["2"], ["!r-3"], ["!r-3"], ["2"], ["!r-3"], ["!r-3"], [0, 0]],
  [[0, 2], ["2"], ["2"], ["!r-3"], ["!r-3"], ["!r-3"], ["2"], ["!r-3"], [0, 0]], //72
];

let FillnCoverExRule = [
  //stop
  [[0], [2], ["o"], ["!o"], ["o"], ["o"], ["o"], ["o"], [0, 1]],
  [[0], [2], ["!o"], ["!o"], ["o"], ["o"], ["o"], ["o"], [0, 1]],
  [[0], [2], ["!o"], ["!o"], ["o"], ["o"], ["o"], ["!o"], [0, 1]],
  // i'm leader Short ver
  // [[0], [2], [2, 0, 0], ["!r"], ["!r"], ["!r"], [0], ["o"], [0, 3]],
  // [[0], [2], [2, 0, 0], ["!r"], ["!r"], [0], ["o"], ["!r"], [0, 3]],

  // [[0], [2], [2, 0, 0], ["o"], [0], ["o"], ["o"], ["o"], [0, 3]],
  // [[0], [2], [2, 0, 0], ["!r"], [0], ["o"], ["o"], [0], [0, 3]],
  // [[0], [2], [2, 0, 0], ["!r"], [0], ["o"], [0], [0], [0, 3]],

  [[0], [2], [2, 0, 0], [0], ["o"], ["!r"], ["!o"], ["!o"], [0, 3]],
  //l am leader(long ver)
  [[4], [1], ["o"], [0], [0], [1], [0], [0], [0, 3]],

  [[4], [1], [0], ["o"], ["o"], [1], [0], [0], [0, 3]],
  [[4], [1], ["o"], ["o"], [0], [1], [0], [0], [0, 3]],
  [[4], [1], ["o"], [0], [0], [1], [0], ["o"], [0, 3]],
  [[4], [1], [0], [0], [0], [1], ["o"], ["o"], [0, 3]],

  [[4], [1], ["o"], ["o"], ["o"], [1], [0], [0], [0, 3]],
  [[4], [1], ["o"], ["o"], [0], [1], [0], ["o"], [0, 3]],
  [[4], [1], ["o"], [0], [0], [1], ["o"], ["o"], [0, 3]],

  [[4], [1], [0], ["o"], ["o"], [1], ["o"], [0], [0, 3]],
  [[4], [1], [0], ["o"], ["o"], [1], [0], ["o"], [0, 3]],

  [[4], [1], ["o"], ["o"], ["o"], [1], [0], ["o"], [0, 3]],
  [[4], [1], ["o"], ["o"], [0], [1], ["o"], ["o"], [0, 3]],

  [[4], [1], [0], ["o"], ["o"], [1], ["o"], ["o"], [0, 3]],
  [[4], [1], ["o"], ["o"], ["o"], [1], ["o"], [0], [0, 3]],

  [[4], [1], ["o"], ["o"], ["o"], [1], ["o"], ["o"], [0, 3]],
  // Leader short 左回り
  [[0], [2], [2, 0, 0], ["!r"], ["!r"], ["!r"], [0], ["o"], [5, 3]],
  [[0], [2], [2, 0, 0], ["!r"], ["!r"], [0], ["o"], ["!r"], [4, 3]],

  [[0], [2], [2, 0, 0], ["o"], [0], ["o"], ["o"], ["o"], [3, 3]],
  [[0], [2], [2, 0, 0], ["!r"], [0], ["o"], ["o"], [0], [3, 3]],
  [[0], [2], [2, 0, 0], ["!r"], [0], ["o"], [0], [0], [3, 3]],

  [[0], [2], [2, 0, 0], [0], ["o"], ["!r"], ["!o"], ["!o"], [2, 3]],
  //leader long
  [[6], [1], ["o"], [0], [0], [0], [2, 0, 0], [1], [6, 3]],
  [[6], [1], ["o"], ["o"], [0], [0], [2, 0, 0], [1], [6, 3]],
  //nomal short
  [[0], [2], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], [5, 0]],
  [[0], [2], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 3], ["!r-3"], [5, 0]],

  [[0], [2], [2, 0, 0], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], [4, 0]],
  [[0], [2], [2, 0, 0], ["!r-3"], ["!r-3"], [1, 3], ["!r-3"], ["!r-3"], [4, 0]],

  [[0], [2], [2, 0, 0], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], ["!r-3"], [3, 0]],
  [[0], [2], [2, 0, 0], ["!r-3"], [1, 3], ["!r-3"], ["!r-3"], ["!r-3"], [3, 0]],

  //2 longの時に誰か乗っかってきたらshortになる
  [[5, 2], [2, 2, 0], [1, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], [5, 2]],
  [[5, 2], [2, 2, 0], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], [5, 2]],

  [[5, 3], [2, 3, 0], [1, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 3], ["!r-3"], [5, 3]],
  [[5, 3], [2, 3, 0], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [1, 3], ["!r-3"], [5, 3]],

  [[4, 2], [2, 2, 0], [1, 0], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], [4, 2]],
  [[4, 2], [2, 2, 0], [2, 0, 0], ["!r-3"], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], [4, 2]],

  [[4, 3], [2, 3, 0], [1, 0], ["!r-3"], ["!r-3"], [1, 3], ["!r-3"], ["!r-3"], [4, 3]],
  [[4, 3], [2, 3, 0], [2, 0, 0], ["!r-3"], ["!r-3"], [1, 3], ["!r-3"], ["!r-3"], [4, 3]],

  [[3, 2], [2, 2, 0], [1, 0], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], ["!r-3"], [3, 2]],
  [[3, 2], [2, 2, 0], [2, 0, 0], ["!r-3"], [1, 2], ["!r-3"], ["!r-3"], ["!r-3"], [3, 2]],

  [[3, 3], [2, 3, 0], [1, 0], ["!r-3"], [1, 3], ["!r-3"], ["!r-3"], ["!r-3"], [3, 3]],
  [[3, 3], [2, 3, 0], [2, 0, 0], ["!r-3"], [1, 3], ["!r-3"], ["!r-3"], ["!r-3"], [3, 3]],

  //nomal long light 0 -> 2
  [[5], [1], [2, 2, 2], ["!r-3"], ["!r-3"], ["!r-3"], [1], ["!r-3"], [0, 2]],
  [[5], [1], [2, 2, 2], ["!r-3"], ["!r-3"], ["!r-3"], [2, 0, 0], ["!r-3"], [0, 2]],
  [[4], [1], [2, 2, 2], ["!r-3"], ["!r-3"], [1], ["!r-3"], ["!r-3"], [0, 2]],
  [[4], [1], [2, 2, 2], ["!r-3"], ["!r-3"], [2, 0, 0], ["!r-3"], ["!r-3"], [0, 2]],
  [[3], [1], [2, 2, 2], ["!r-3"], [1], ["!r-3"], ["!r-3"], ["!r-3"], [0, 2]],
  [[3], [1], [2, 2, 2], ["!r-3"], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [0, 2]],
  //light 3用
  [[5], [1], [2, 3, 3], ["!r-3"], ["!r-3"], ["!r-3"], [1, 0], ["!r-3"], [0, 2]],
  [[5], [1], [2, 3, 3], ["!r-3"], ["!r-3"], ["!r-3"], [2, 0, 0], ["!r-3"], [0, 2]],
  [[4], [1], [2, 3, 3], ["!r-3"], ["!r-3"], [1, 0], ["!r-3"], ["!r-3"], [0, 2]],
  [[4], [1], [2, 3, 3], ["!r-3"], ["!r-3"], [2, 0, 0], ["!r-3"], ["!r-3"], [0, 2]],
  [[3], [1], [2, 3, 3], ["!r-3"], [1, 0], ["!r-3"], ["!r-3"], ["!r-3"], [0, 2]],
  [[3], [1], [2, 3, 3], ["!r-3"], [2, 0, 0], ["!r-3"], ["!r-3"], ["!r-3"], [0, 2]],

  //2つ以上のshortを観測するとlight -> 0
  [[0, 2], ["2"], ["2"], ["!r-3"], ["!r-3"], ["2"], ["!r-3"], ["!r-3"], [0, 0]],
  [[0, 2], ["2"], ["2"], ["!r-3"], ["!r-3"], ["!r-3"], ["2"], ["!r-3"], [0, 0]], //72

  //最後尾用
  [[0, 0], [2, 0, 0], [1, 0], [0], [0], [0], [0], [0], [1, 0]],
  [[0, 0], [2, 0, 0], [1, 2], [0], [0], [0], [0], [0], [1, 0]],
  [[1, 0], [1, 0], [1, 0], [0], [0], [0], [0], [0], [1, 0]],
];

const ExplorationRule = [
  //move line
  [[2, 4], [1, 4], [0], [2, 4, 3], [0], [0], [0], [0], [2, 4]],
  [[0, 3], [2, 3, 3], [2, 4, 4], [0], [0], [0], [0], [0], [4, 3]],
  [[0, 4], [2, 4, 4], [0], [0], [0], [1, 3], [0], [0], [4, 4]],
  [[2, 3], [2, 3, 4], [0], [1, 3], [0], [0], [1, 4], [0], [2, 3]],

  //red finish rule
  [[1, 1], [1, 1], [1, 1], [0], [0], [1, 4], [1, 4], [0], [1, 1]],

  //initA154
  [[0, 1], [2, 1, 1], [2, 3, 3], [0], [0], [2, 1, 1], [2, 2, 2], [2, 4, 4], [2, 1]],
  [[0, 3], [2, 3, 3], [0], [0], [1, 1], [1, 1], [2, 4, 4], [0], [4, 3]],
  [[0, 4], [2, 4, 4], [0], [1, 3], [2, 1, 3], [2, 2, 2], [0], [0], [2, 4]],
  [[2, 1], [2, 1, 3], [2, 3, 4], [1, 1], [0], [2, 1, 1], [2, 2, 2], [1, 4], [2, 1]],
  [[0, 1], [2, 1, 1], [0], [0], [0], [0], [1, 3], [2, 3, 4], [1, 1]],
  [[4, 3], [2, 3, 4], [0], [1, 1], [1, 1], [1, 3], [1, 4], [0], [4, 3]],

  [[0, 3], [2, 3, 3], [1, 4], [1, 1], [0], [2, 1, 1], [2, 2, 2], [1, 4], [3, 3]],
  [[5, 4], [1, 4], [0], [1, 1], [1, 1], [1, 3], [1, 4], [0], [4, 4]],
  [[3, 3], [2, 3, 4], [0], [1, 1], [1, 3], [2, 1, 1], [2, 2, 2], [1, 4], [3, 3]],
  [[3, 4], [1, 4], [0], [0], [1, 4], [2, 2, 2], [0], [0], [3, 4]],

  [[0, 3], [2, 3, 3], [1, 1], [0], [0], [0], [2, 1, 1], [2, 4, 4], [4, 3]],
  [[0, 4], [2, 4, 4], [0], [1, 1], [1, 3], [2, 1, 1], [2, 2, 2], [0], [3, 4]],
  [[4, 3], [2, 3, 4], [1, 1], [0], [0], [1, 3], [2, 1, 1], [1, 4], [4, 3]],
  [[3, 4], [1, 4], [0], [0], [1, 4], [2, 1, 1], [2, 2, 2], [0], [3, 4]],

  //initA154 R2 agein
  [[0, 1], [2, 1, 1], [0], [2, 4, 4], [2, 3, 3], [0], [0], [2, 2, 2], [4, 1]],
  [[0, 4], [2, 4, 4], [0], [0], [0], [1, 3], [2, 1, 3], [0], [4, 4]],
  [[0, 4], [2, 4, 4], [1, 1], [0], [0], [1, 3], [2, 1, 3], [0], [4, 4]],
  [[4, 1], [2, 1, 3], [0], [1, 4], [2, 3, 4], [1, 1], [0], [2, 2, 2], [4, 1]],

  [[0, 3], [2, 3, 3], [0], [1, 4], [1, 4], [1, 1], [0], [2, 2, 2], [5, 3]],
  [[5, 3], [2, 3, 4], [0], [1, 4], [0], [1, 1], [1, 3], [2, 2, 2], [5, 3]],

  //initA154 green
  [[0, 3], [2, 3, 3], [2, 2, 2], [2, 4, 4], [1, 1], [0], [0], [0], [6, 3]],
  [[0, 4], [2, 4, 4], [0], [0], [0], [1, 1], [1, 3], [2, 2, 2], [5, 4]],
  [[6, 3], [2, 3, 4], [2, 2, 2], [1, 4], [1, 1], [0], [0], [1, 3], [6, 3]],
  // [[5, 4], [1, 4], [0], [0], [0], [1, 1], [1, 4], [2, 2, 2], [5, 4]],
  [[0, 3], [2, 3, 3], [0], [2, 2, 2], [2, 4, 4], [0], [0], [0], [6, 3]],
  [[0, 2], [2, 2, 2], [0], [0], [0], [2, 4, 4], [1, 3], [0], [6, 2]],
  [[0, 4], [2, 4, 4], [1, 2], [0], [0], [0], [0], [1, 3], [6, 4]],
  [[6, 3], [2, 3, 4], [1, 2], [1, 2], [1, 4], [0], [0], [1, 3], [6, 3]],
  [[6, 4], [1, 4], [1, 2], [0], [0], [0], [0], [1, 4], [6, 4]],
  [[0, 3], [2, 3, 3], [0], [1, 2], [2, 4, 4], [0], [0], [0], [1, 3]],
  [[0, 4], [2, 4, 4], [1, 2], [1, 2], [0], [0], [0], [1, 3], [6, 4]],
  [[6, 2], [1, 2], [0], [0], [0], [0], [1, 4], [1, 2], [5, 2]],
  [[1, 3], [2, 3, 4], [1, 3], [1, 2], [2, 4, 2], [0], [0], [0], [1, 3]],
  [[4, 2], [1, 2], [0], [0], [0], [2, 4, 2], [1, 4], [2, 3, 3], [5, 2]],
  [[6, 4], [2, 4, 2], [0], [0], [0], [0], [0], [2, 4, 2], [1, 4]],
  [[0, 3], [2, 3, 3], [0], [0], [1, 4], [2, 4, 2], [0], [0], [2, 3]],
  [[5, 4], [1, 4], [1, 3], [0], [0], [1, 2], [2, 4, 2], [1, 3], [6, 4]],
  [[2, 3], [2, 3, 4], [0], [1, 3], [0], [2, 4, 2], [0], [0], [2, 3]],
  [[1, 4], [2, 4, 2], [1, 4], [0], [1, 2], [0], [0], [0], [1, 4]],
  [[6, 2], [1, 2], [0], [0], [0], [0], [0], [1, 2], [6, 2]],
  [[0, 4], [2, 4, 4], [0], [1, 3], [0], [2, 2, 2], [0], [0], [2, 4]],
  [[2, 4], [1, 4], [0], [1, 4], [0], [2, 2, 2], [0], [0], [2, 4]],

  //2nd red
  [[0, 3], [2, 3, 3], [0], [0], [2, 1, 1], [0], [2, 4, 4], [0], [2, 3]],
  [[2, 3], [2, 3, 4], [0], [1, 3], [1, 1], [1, 1], [1, 4], [0], [2, 3]],
  [[2, 1], [1, 1], [1, 4], [1, 1], [0], [0], [0], [1, 4], [2, 1]],

  //2nd red repeat
  [[0, 1], [2, 1, 1], [2, 3, 3], [0], [0], [0], [0], [2, 4, 4], [2, 1]],
  [[2, 1], [2, 1, 3], [2, 3, 4], [1, 1], [0], [0], [0], [1, 4], [2, 1]],
  [[0, 3], [2, 3, 3], [1, 4], [1, 1], [0], [0], [0], [1, 4], [3, 3]],
  [[3, 3], [2, 3, 4], [0], [1, 1], [1, 3], [0], [0], [1, 4], [3, 3]],
  [[0, 3], [2, 3, 3], [1, 1], [0], [0], [0], [0], [2, 4, 4], [4, 3]],
  [[0, 4], [2, 4, 4], [0], [1, 1], [1, 3], [0], [0], [0], [3, 4]],
  [[4, 3], [2, 3, 4], [1, 1], [0], [0], [1, 3], [0], [1, 4], [4, 3]],

  //2nd green repeat
  [[0, 3], [2, 3, 3], [2, 2, 2], [0], [2, 4, 4], [0], [0], [0], [6, 3]],
  [[6, 3], [2, 3, 4], [2, 2, 2], [0], [1, 4], [0], [0], [1, 3], [6, 3]],
];

const ExploExlightRule = [
  //move line
  [[0, 3], [2, 3, 3], [2, 4, 4], [0], [0], [0], [0], [0], [4, 3]],
  [[0, 4], [2, 4, 4], [0], [0], [0], [1, 3], [0], [0], [4, 4]],
  [[5, 4], [1, 4], [0], [0], [0], [0], [1, 4], [0], [5, 4]],
  [[2, 3], [2, 3, 4], [0], [1, 3], [0], [0], [1, 4], [0], [2, 3]],

  //red finish rule
  [[1, 1], [1, 1], [1, 1], [0], [0], [1, 4], [1, 4], [0], [1, 1]],

  //initA154
  [[0, 1], [2, 1, 1], [2, 3, 3], [0], [0], [2, 1, 1], [2, 2, 2], [2, 4, 4], [2, 1]],
  [[0, 3], [2, 3, 3], [0], [0], [1, 1], [1, 1], [2, 4, 4], [0], [4, 3]],
  [[0, 4], [2, 4, 4], [0], [1, 3], [2, 1, 3], [2, 2, 2], [0], [0], [2, 4]],
  [[2, 1], [2, 1, 3], [2, 3, 4], [1, 1], [0], [2, 1, 1], [2, 2, 2], [1, 4], [2, 1]],
  [[0, 1], [2, 1, 1], [0], [0], [0], [0], [1, 3], [2, 3, 4], [1, 1]],
  [[4, 3], [2, 3, 4], [0], [1, 1], [1, 1], [1, 3], [1, 4], [0], [4, 3]],

  [[0, 3], [2, 3, 3], [1, 4], [1, 1], [0], [2, 1, 1], [2, 2, 2], [1, 4], [3, 3]],
  [[5, 4], [1, 4], [0], [1, 1], [1, 1], [1, 3], [1, 4], [0], [4, 4]],
  [[3, 3], [2, 3, 4], [0], [1, 1], [1, 3], [2, 1, 1], [2, 2, 2], [1, 4], [3, 3]],
  [[3, 4], [1, 4], [0], [0], [1, 4], [2, 2, 2], [0], [0], [3, 4]],

  [[0, 3], [2, 3, 3], [1, 1], [0], [0], [0], [2, 1, 1], [2, 4, 4], [4, 3]],
  [[0, 4], [2, 4, 4], [0], [1, 1], [1, 3], [2, 1, 1], [2, 2, 2], [0], [3, 4]],
  [[4, 3], [2, 3, 4], [1, 1], [0], [0], [1, 3], [2, 1, 1], [1, 4], [4, 3]],
  [[3, 4], [1, 4], [0], [0], [1, 4], [2, 1, 1], [2, 2, 2], [0], [3, 4]],

  //initA154 R2 agein
  [[0, 1], [2, 1, 1], [0], [2, 4, 4], [2, 3, 3], [0], [0], [2, 2, 2], [4, 1]],
  [[0, 4], [2, 4, 4], [0], [0], [0], [1, 3], [2, 1, 3], [0], [4, 4]],
  [[0, 4], [2, 4, 4], [1, 1], [0], [0], [1, 3], [2, 1, 3], [0], [4, 4]],
  [[4, 1], [2, 1, 3], [0], [1, 4], [2, 3, 4], [1, 1], [0], [2, 2, 2], [4, 1]],

  [[0, 3], [2, 3, 3], [0], [1, 4], [1, 4], [1, 1], [0], [2, 2, 2], [5, 3]],
  [[5, 3], [2, 3, 4], [0], [1, 4], [0], [1, 1], [1, 3], [2, 2, 2], [5, 3]],

  //initA154 green
  [[0, 3], [2, 3, 3], [2, 2, 2], [2, 4, 4], [1, 1], [0], [0], [0], [6, 3]],
  [[0, 4], [2, 4, 4], [0], [0], [0], [1, 1], [1, 3], [2, 2, 2], [5, 4]],
  [[6, 3], [2, 3, 4], [2, 2, 2], [1, 4], [1, 1], [0], [0], [1, 3], [6, 3]],
  // [[5, 4], [1, 4], [0], [0], [0], [1, 1], [1, 4], [2, 2, 2], [5, 4]],
  [[0, 3], [2, 3, 3], [0], [2, 2, 2], [2, 4, 4], [0], [0], [0], [6, 3]],
  [[0, 2], [2, 2, 2], [0], [0], [0], [2, 4, 4], [1, 3], [0], [6, 2]],
  [[0, 4], [2, 4, 4], [1, 2], [0], [0], [0], [0], [1, 3], [6, 4]],
  [[6, 3], [2, 3, 4], [1, 2], [1, 2], [1, 4], [0], [0], [1, 3], [6, 3]],
  [[6, 4], [1, 4], [1, 2], [0], [0], [0], [0], [1, 4], [6, 4]],
  [[0, 3], [2, 3, 3], [0], [1, 2], [2, 4, 4], [0], [0], [0], [1, 3]],
  [[0, 4], [2, 4, 4], [1, 2], [1, 2], [0], [0], [0], [1, 3], [6, 4]],
  [[6, 2], [1, 2], [0], [0], [0], [0], [1, 4], [1, 2], [5, 2]],
  [[1, 3], [2, 3, 4], [1, 3], [1, 2], [2, 4, 2], [0], [0], [0], [1, 3]],
  [[4, 2], [1, 2], [0], [0], [0], [2, 4, 2], [1, 4], [2, 3, 3], [5, 2]],
  [[6, 4], [2, 4, 2], [0], [0], [0], [0], [0], [2, 4, 2], [1, 4]],
  [[0, 3], [2, 3, 3], [0], [0], [1, 4], [2, 4, 2], [0], [0], [2, 3]],
  [[5, 4], [1, 4], [1, 3], [0], [0], [1, 2], [2, 4, 2], [1, 3], [6, 4]],
  [[2, 3], [2, 3, 4], [0], [1, 3], [0], [2, 4, 2], [0], [0], [2, 3]],
  [[1, 4], [2, 4, 2], [1, 4], [0], [1, 2], [0], [0], [0], [1, 4]],
  [[6, 2], [1, 2], [0], [0], [0], [0], [0], [1, 2], [6, 2]],
  [[0, 4], [2, 4, 4], [0], [1, 3], [0], [2, 2, 2], [0], [0], [2, 4]],
  [[2, 4], [1, 4], [0], [1, 4], [0], [2, 2, 2], [0], [0], [2, 4]],

  //2nd red
  [[0, 3], [2, 3, 3], [0], [0], [2, 1, 1], [0], [2, 4, 4], [0], [2, 3]],
  [[2, 3], [2, 3, 4], [0], [1, 3], [1, 1], [1, 1], [1, 4], [0], [2, 3]],
  [[2, 1], [1, 1], [1, 4], [1, 1], [0], [0], [0], [1, 4], [2, 1]],

  //2nd red repeat
  [[0, 1], [2, 1, 1], [2, 3, 3], [0], [0], [0], [0], [2, 4, 4], [2, 1]],
  [[2, 1], [2, 1, 3], [2, 3, 4], [1, 1], [0], [0], [0], [1, 4], [2, 1]],
  [[0, 3], [2, 3, 3], [1, 4], [1, 1], [0], [0], [0], [1, 4], [3, 3]],
  [[3, 3], [2, 3, 4], [0], [1, 1], [1, 3], [0], [0], [1, 4], [3, 3]],
  [[0, 3], [2, 3, 3], [1, 1], [0], [0], [0], [0], [2, 4, 4], [4, 3]],
  [[0, 4], [2, 4, 4], [0], [1, 1], [1, 3], [0], [0], [0], [3, 4]],
  [[4, 3], [2, 3, 4], [1, 1], [0], [0], [1, 3], [0], [1, 4], [4, 3]],

  //2nd green repeat
  [[0, 3], [2, 3, 3], [2, 2, 2], [0], [2, 4, 4], [0], [0], [0], [6, 3]],
  [[6, 3], [2, 3, 4], [2, 2, 2], [0], [1, 4], [0], [0], [1, 3], [6, 3]],
];

function makeRuleChirality(rule) {
  let ret = new Array(6);
  for (let i = 0; i < ret.length; i++) {
    ret[i] = new Array(9);
  }
  for (let i = 0; i < ret.length; i++)
    for (let j = 0; j < ret[i].length; j++) {
      ret[i][j] = [];
    }
  if (rule[0][0] == 0) {
    for (let i = 0; i < 6; i++) {
      ret[i][0].push(0);
      if (rule[0].length > 1) ret[i][0].push(rule[0][1]);
    }
  } else {
    for (let i = 0; i < ret.length; i++) {
      ret[i][0].push(place2num(rule[0][0] + i + 1));
      if (rule[0].length > 1) ret[i][0].push(rule[0][1]);
    }
  }
  for (let i = 0; i < ret.length; i++) {
    ret[i][1] = rule[1].slice();
  }
  for (let i = 0; i < ret.length; i++) {
    for (let j = 2; j <= 7; j++) {
      ret[i][j] = rule[ttt(j - 1 - i)].slice();
    }
  }

  for (let i = 0; i < ret.length; i++) {
    if (rule[8][0] == 0) {
      ret[i][8].push(0);
    } else {
      ret[i][8].push(place2num(rule[8][0] + i + 1));
    }
    ret[i][8].push(rule[8][1]);
  }
  return ret;
}

function makeRuleSymmetry(rule) {
  let ret = new Array(2);
  for (let i = 0; i < ret.length; i++) {
    ret[i] = new Array(9);
  }

  for (let j = 0; j < ret[1].length; j++) {
    ret[1][j] = [];
  }
  //シンメトリーそのままver
  ret[0] = rule.slice();

  //相手の位置と色
  ret[1][0].push(Xsymmetry(rule[0][0]));
  ret[1][0].push(rule[0][1]);

  // //自分の位置と色そのままCP

  ret[1][1] = rule[1].slice();

  for (let j = 2; j <= 7; j++) {
    ret[1][j] = rule[Xsymmetry(j - 1) + 1].slice();
  }

  ret[1][8].push(Xsymmetry(rule[8][0]));
  ret[1][8].push(rule[8][1]);
  return ret;
}

function makeRuleExLight(rule) {
  let ret = new Array(nowAlgo.getNLight());
  for (let i = 0; i < ret.length; i++) {
    ret[i] = JSON.parse(JSON.stringify(rule));
  }


  originalColor = rule[0][1];
  //change light
  for (let i = 0; i < ret.length; i++) {
    let newColor = i + 1;
    ret[i][0][1] = newColor; //
    ret[i][8][1] = newColor;
    for (let j = 1; j < ret[i][1].length; j++) {
      if (ret[i][1][j] == originalColor) {
        ret[i][1][j] = newColor;
        break;
      }
    }
    let bro = ret[i][0][0];
    let listbro = bro + 1;
    for (let j = 1; j < ret[i][listbro].length; j++) {
      if (ret[i][listbro][j] == originalColor) {
        ret[i][listbro][j] = newColor;
        break;
      }
    }
  }
  return ret;
}

function place2num(n) {
  return ((n - 1) % 6) + 1;
}

function ttt(x) {
  if (x > 7) {
    return ttt(x - 6);
  }
  if (x < 2) {
    return ttt(x + 6);
  }
  return x;
}

function Xsymmetry(x) {
  switch (x) {
    case 0:
      return 0;
    case 1:
      return 1;
    case 2:
      return 6;
    case 3:
      return 5;
    case 4:
      return 4;
    case 5:
      return 3;
    case 6:
      return 2;
  }
}
